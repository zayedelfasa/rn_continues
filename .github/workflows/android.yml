name: Android

on: [pull_request]

# jobs: 
#   build:
#     runs-on: ubuntu-20.04
#     steps:
#       - uses: actions/checkout@v2
#       - name: Use Node.js v12
#         uses: actions/setup-node@v1
#         with: 
#           node-version: 14.x

#       - name: Cache npm dependecies
#         uses: actions/checkout@v2
#         with:
#           path: '~/.npm'
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.is }}-node-
      
#       - run: rm -rf node_modules && npm install
#         name: Remove node_modules then install
#       - run: npm ci
#       - run: npx jetifier
#       - run: ./gradlew clean && ./gradlew bundleRelease
#         working-directory: android
#         name: Build Android apk (Release)

#       - uses: actions/upload-artifact@v2
#         with:
#           name: android-apk
#           path: '**/*.apk'

jobs:
  install-and-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install npm dependencies
        run: |
          npm install
  build-android:
    needs: install-and-test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install npm dependencies
        run: |
          npm install
      - name: Build Android Release
        run: |
          cd android && ./gradlew assembleRelease
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/